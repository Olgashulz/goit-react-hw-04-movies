{"version":3,"sources":["components/Navigation/Navigation.module.css","components/AppBar/Appbar.module.css","components/Container/Container.module.css","components/Navigation/Navigation.js","components/AppBar/Appbar.js","components/Container/Container.js","components/PageHeading/PageHeading.js","services/api.js","views/HomeViev.js","components/App.js","index.js"],"names":["module","exports","Navigation","exact","to","className","styles","link","activeClassName","activeLink","Appbar","header","Container","children","container","PageHeading","text","title","fetchMoovies","page","a","fetch","then","response","ok","json","Promise","reject","error","Error","data","results","HomeView","url","useRouteMatch","useState","films","setFilms","useEffect","map","film","id","original_title","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,wD,mBCA/DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,oKCEf,SAASC,IACpB,OACI,gCACI,cAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIC,UAAWC,IAAOC,KAAMC,gBAAiBF,IAAOG,WAAtE,kBACA,cAAC,IAAD,CAASL,GAAG,UAAUC,UAAWC,IAAOC,KAAMC,gBAAiBF,IAAOG,WAAtE,uB,qBCJG,SAASC,IACpB,OACI,wBAAQL,UAAWC,IAAOK,OAA1B,SACI,cAACT,EAAD,M,qBCJG,SAASU,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,OAAO,qBAAKR,UAAWC,IAAOQ,UAAvB,SAAmCD,I,6BCD/B,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAClC,OAAO,oBAAIX,UAAWC,IAAOW,MAAtB,SAA8BD,I,6BCqB5BE,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACLC,MAAM,4DAAD,OAxBZ,mCAwBY,iBACwDF,IAE3EG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OAAO,CAClBC,MAAO,IAAIC,MAAJ,uBAA0BV,EAA1B,sCATK,cAClBW,EADkB,yBAYjBA,EAAKC,SAZY,2CAAH,sDClBV,SAASC,IAGpB,IAAQC,EAAQC,cAARD,IACR,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOhB,EAAP,UAQA,OANAmB,qBAAU,WACNpB,EAAaC,GAAMG,KAAKe,KAEzB,CAAClB,IAIA,qCACI,cAACJ,EAAD,CAAaC,KAAK,mBAEjBoB,GACG,6BACKA,EAAMG,KAAI,SAAAC,GACP,OACI,6BACI,cAAC,IAAD,CAAMpC,GAAE,UAAK6B,EAAL,YAAYO,EAAKC,IAAzB,SAAgCD,EAAKE,kBADhCF,EAAKC,YCtB3B,SAASE,IACtB,OACE,eAAC/B,EAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgC,KAAK,IAAIzC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOyC,KAAK,UAAZ,SACE,cAAC,EAAD,YCRVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACJ,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.eb457b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3qeuQ\",\"activeLink\":\"Navigation_activeLink__zhd6m Navigation_link__3qeuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Appbar_header__YjxUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2PsBB\"};","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <nav>\r\n            <NavLink exact to=\"/\" className={styles.link} activeClassName={styles.activeLink}>Home</NavLink>\r\n            <NavLink to=\"/movies\" className={styles.link} activeClassName={styles.activeLink}>Movies</NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import Navigation from '../Navigation/Navigation';\r\nimport styles from './Appbar.module.css';\r\n\r\nexport default function Appbar() {\r\n    return (\r\n        <header className={styles.header}>\r\n            <Navigation />\r\n        </header>\r\n    );\r\n}","import styles from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n    return <div className={styles.container}>{children}</div>;\r\n}\r\n","import styles from \"./PageHeading.module.css\";\r\n\r\nexport default function PageHeading({ text }) {\r\n    return <h1 className={styles.title}>{text}</h1>;\r\n}","// const BASE_URL = ' `https://api.themoviedb.org/3/trending/movie/week?api_key=';\r\nconst API_KEY = '8a933616dedc140a2710dab44d7240df'\r\n\r\n\r\n// try {\r\n//     const data = await fetch(\r\n//         `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n//     );\r\n//     const serverAnswer = await data.json();\r\n//     this.totalPages = serverAnswer.total_pages;\r\n//     const resultArr = serverAnswer.results;\r\n//     window.newPagination.createPagination();\r\n//     if (resultArr.length === 0) {\r\n//         showAllert('Nothing more found.');\r\n//         loader.hide();\r\n//     }\r\n//     loader.totalCards = resultArr.length;\r\n//     return resultArr;\r\n// } catch (err) {\r\n//     showAllert('Error communicating with server');\r\n// }\r\n// }\r\n\r\n\r\nexport const fetchMoovies = async (page) => {\r\n    const data = await fetch(\r\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n    )\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            return Promise.reject({\r\n                error: new Error(`Your request ${page}} did not return any results`),\r\n            });\r\n        });\r\n    return data.results;\r\n};\r\n\r\n\r\n\r\n// export default class ApiService {\r\n//     constructor(apiKey) {\r\n//         this.query = '';\r\n//         this.apiKey = apiKey;\r\n//         this.page = 1;\r\n//         this.totalItems = 1;\r\n//         this.totalPages = 1;\r\n//         this.genre = null;\r\n//     }\r\n\r\n//     async getTrendingMovies(page = this.page) {\r\n//         this.query = '';\r\n//         this.genre = null;\r\n//         this.page = page;\r\n//         try {\r\n//             const data = await fetch(\r\n//                 `https://api.themoviedb.org/3/trending/movie/week?api_key=${this.apiKey}&page=${page}`,\r\n//             );\r\n//             const serverAnswer = await data.json();\r\n//             this.totalPages = serverAnswer.total_pages;\r\n//             const resultArr = serverAnswer.results;\r\n//             window.newPagination.createPagination();\r\n//             if (resultArr.length === 0) {\r\n//                 showAllert('Nothing more found.');\r\n//                 loader.hide();\r\n//             }\r\n//             loader.totalCards = resultArr.length;\r\n//             return resultArr;\r\n//         } catch (err) {\r\n//             showAllert('Error communicating with server');\r\n//         }\r\n//     }\r\n\r\n//     async findMovies(query = this.query, page = this.page) {\r\n//         const searchQuery = query.trim();\r\n//         if (searchQuery === '') throw 'Empty query! Please enter film name.';\r\n//         this.query = searchQuery;\r\n//         this.genre = null;\r\n//         this.page = page;\r\n//         loader.show(20);\r\n//         try {\r\n//             const data = await fetch(\r\n//                 `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${searchQuery}&page=${page}`,\r\n//             );\r\n//             const serverAnswer = await data.json();\r\n//             this.totalPages = serverAnswer.total_pages;\r\n//             const resultArr = serverAnswer.results;\r\n//             if (resultArr.length === 0) {\r\n//                 showAllert('Nothing found. Please specify your request.');\r\n//                 loader.hide();\r\n//             }\r\n//             loader.totalCards = resultArr.length;\r\n//             return resultArr;\r\n//         } catch (err) {\r\n//             showAllert('Error communicating with server');\r\n//         }\r\n//     }\r\n\r\n//     async getMovieByID(id) {\r\n//         OPEN_NOW_FILM_ID = id;\r\n//         loader.show(1);\r\n//         try {\r\n//             const data = await fetch(\r\n//                 `https://api.themoviedb.org/3/movie/${id}?api_key=${this.apiKey}&language=en-US`,\r\n//             );\r\n//             return await data.json();\r\n//         } catch (err) {\r\n//             showAllert('Error communicating with server');\r\n//         }\r\n//     }\r\n\r\n//     async getTrailerKeyByMovieId(id) {\r\n//         try {\r\n//             const data = await fetch(\r\n//                 `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${this.apiKey}&language=en-US`,\r\n//             );\r\n//             return (await data.json()).results[0]?.key;\r\n//         } catch (err) {\r\n//             showAllert('Error communicating with server');\r\n//         }\r\n//     }\r\n\r\n//     async fetchMoviesByGenre(genreId = this.genre, page = this.page) {\r\n//         this.query = '';\r\n//         this.genre = genreId;\r\n//         this.page = page;\r\n\r\n//         loader.show(20);\r\n//         try {\r\n//             const data = await fetch(\r\n//                 `https://api.themoviedb.org/3/discover/movie?api_key=${this.apiKey}&with_genres=${genreId}&page=${page}`,\r\n//             );\r\n//             const serverAnswer = await data.json();\r\n//             this.totalPages = serverAnswer.total_pages;\r\n//             const resultArr = serverAnswer.results;\r\n//             if (resultArr.length === 0) {\r\n//                 showAllert('Nothing found. Please specify your request.');\r\n//                 loader.hide();\r\n//             }\r\n//             loader.totalCards = resultArr.length;\r\n//             return resultArr;\r\n//         } catch (err) {\r\n//             showAllert('Error communicating with server');\r\n//         }\r\n//     }\r\n// }","import { useState, useEffect } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport PageHeading from '../components/PageHeading/PageHeading';\r\nimport { fetchMoovies } from '../services/api'\r\n\r\nexport default function HomeView() {\r\n    // const match = useRouteMatch;\r\n    // console.log(match);\r\n    const { url } = useRouteMatch();\r\n    const [films, setFilms] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        fetchMoovies(page).then(setFilms)\r\n\r\n    }, [page])\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageHeading text=\"Popular movies\" />\r\n\r\n            {films &&\r\n                <ul>\r\n                    {films.map(film => {\r\n                        return (\r\n                            <li key={film.id}>\r\n                                <Link to={`${url}/${film.id}`}>{film.original_title}</Link>\r\n                            </li>)\r\n                    })}\r\n                </ul>}\r\n        </>\r\n    );\r\n}\r\n\r\n","import { Route, Switch } from 'react-router'\nimport AppBar from '../components/AppBar/Appbar';\nimport Container from './Container';\nimport HomeViev from '../views/HomeViev';\n\nexport default function App() {\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeViev />\n        </Route>\n        <Route path=\"/movies\">\n          <HomeViev />\n        </Route>\n      </Switch>\n    </Container>\n\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}